第一部分。COE制作

1.在网上下载想要的音乐MID文件。注意一定要是MID，因为我只实现了mp3播放单音轨文件（听说有大佬可以搞定多音轨，这里不多说明）。

2.打开下载好的BmpToMif软件，打开后选择数据文件，打开MID文件，选择需要的字长，生成二进制文件。

3.但注意，这里的二进制文件还不能直接放在ROM里播放，因为COE文件要求非常严格的格式。这里可以参照我的样例，修改自己的文件，也可以像我一样让AI写一个C++程序。记得改下缀COE

4.如果修改成功的话，将COE放入verilog的ROM中，写入bitstream后即可播放（记得带耳机）。

第二部分进阶。实现能够切歌的COE文件

1.第一步你需要两个参照第一部分制作，可以播放的COE文件。

2.我的切歌实现实际上就是复刻了学长的切歌实现模块。这里做一点讲解：
当从coe中读取数据时，学长其实是选择将状态current和真实地址信号addr合并作为读取位置的方法——addra({current, addr}) 。这样我只要使高位current切换，并检测到切换将addr置零，就能自动切换到下一首歌的首位置。
为了实现这一点，需要对coe做出些改变。设置addr为12位信号，而一首歌小于这么大的存储空间，因此我需要在歌结束后补充0，把下一首歌的首位置挤到合适的地方。这里使用C++程序实现。

3.具体实现的话也可以让AI写一个C++程序，很快并且很准确。